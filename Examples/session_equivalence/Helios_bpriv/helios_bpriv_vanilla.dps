// helios without ZKP neither weeding

free alice, bob, attacker. // identities

free c. // public channel
free auth,internal [private]. // private channels

// encryption
fun aenc/3.
fun pk/1.
const decryption_key [private].
reduc adec(aenc(x,r,pk(sk)),sk) -> x.

const zero. // blank vote

// voting process
let VoterReal(id,pkE) =
  in(internal,state);
  let (vote1,vote2,vote3) = state in
  in(c,v); // receives voting instructions from the attacker
  let (v0,v1) = v in
  new r0;
  let b0 = aenc(v0,r0,pkE) in
  /* let zk0 = zkp(r0,id,v0,b0) in */
  out(c, (id,b0)); // gives the real vote to the attacker
  if id = alice then out(internal,(b0,vote2,vote3))
  else out(internal,(vote1,b0,vote3)).

let VoterFake(id,pkE) =
  in(internal,state);
  let (vote1,vote2,vote3) = state in
  in(c,v); // receives voting instructions from the attacker
  let (v0,v1) = v in
  new r0; new r1;
  let b0 = aenc(v0,r0,pkE) in
  let b1 = aenc(v1,r1,pkE) in
  /* let zk1 = zkp(r1,id,v1,b1) in */
  out(c, (id,b1)); // gives the fake vote to the attacker
  if id = alice then out(internal,(b0,vote2,vote3))
  else out(internal,(vote1,b0,vote3)).



// Tallying
let VoterDishonest =
  in(internal,state);
  let (vote1,vote2,vote3) = state in // gets internal state
  in(c,vote);
  let (=attacker,blob) = vote in
    out(internal,(vote1,vote2,blob))
  else out(internal,state).


// getting the result of the subtallies and outputing in a mixnet
let Mixnet =
  in(internal,state);
  let (vote1,vote2,vote3) = state in (
    out(c,adec(vote1,decryption_key)) |
    out(c,adec(vote2,decryption_key)) |
    out(c,adec(vote3,decryption_key))
  ).


let init =
  out(internal,(zero,zero,zero)).

// process under equivalence
let VotingSystemReal =
  let pkE = pk(decryption_key) in
  out(c,pkE); (
    init |
    !^1 VoterReal(alice,pkE) |
    /* !^1 VoterReal(bob,pkE) | */
    !^1 VoterDishonest |
    Mixnet
  ).

let VotingSystemFake =
  let pkE = pk(decryption_key) in
  out(c,pkE); (
    init |
    !^1 VoterFake(alice,pkE) |
    /* !^1 VoterFake(bob,pkE) | */
    !^1 VoterDishonest |
    Mixnet
  ).

// ballot copyt attack
query session_equiv(VotingSystemReal,VotingSystemFake).
