// Unlinkability

fun mac/2.

free c,d.
free c_key [private].

free Error_6300.
free get_challenge.

fun senc/2.

reduc sdec(senc(x,y),y) -> x.

// Description of the reader role

let reader =
  in(c_key,z);
  let (k_e,k_m) = z in
  in(c,xn_t);
  new n_r;
  new k_r;
  let xm = senc((n_r,xn_t,k_r),k_e) in
  out(c,(xm,mac(xm,k_m)));
  in(c,y).

// Description of the passport role

let passport(k_e,k_m) =
  out(c_key,(k_e,k_m));
  new n_t;
  out(c,n_t);
  in(c,y);
  let (xm_e,xm_m) = y in
  let (=xm_m,(xn_r,=n_t,xk_r)) = (mac(xm_e,k_m),sdec(xm_e,k_e)) in
    (
      new k_t;
      let z = senc((n_t,xn_r,k_t),k_e) in
      out(c,(z,mac(z,k_m)))
    )
  else out(c,Error_6300).

let passport_fresh =
  new k_e; new k_m; passport(k_e,k_m).

// Unlinkability

let system_1111 =
  !^4 reader |
  !^4 passport_fresh .

let system_211 =
  !^4 reader |
  (new k_e; new k_m; !^2 passport(k_e,k_m)) |
  !^2 passport_fresh.

query session_equiv(system_1111,system_211).
