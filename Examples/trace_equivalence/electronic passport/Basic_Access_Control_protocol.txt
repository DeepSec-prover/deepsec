// Unlinkability

fun mac/2.

free c.

free Error_6300.
free Error_6A80.
free get_challenge.

fun senc/2.

reduc sdec(senc(x,y),y) -> x.

// Description of the reader role

let reader(k_e,k_m) =
  out(c,get_challenge);
  in(c,n_t);
  new n_r; new k_r;
  let m = senc((n_r,n_t,k_r),k_e) in
  out(c,(m,mac(m,k_m)));
  in(c,y).

// Description of the passport role

let passport(k_e,k_m,error_mac) =
  in(c,x);
  if x = get_challenge
  then
    new n_t;
    out(c,n_t);
    in(c,y);
    let (m_e,m_m) = y in

    (if m_m = mac(m_e,k_m)
    then
      let (n_r,n_t_2,k_r) = sdec(m_e,k_e) in

      if n_t_2 = n_t
      then
	new k_t;
	let m = senc((n_t,n_r,k_t),k_e) in
	out(c,(m,mac(m,k_m)))
      else out(c,Error_6300)
    else out(c,error_mac)).

// Unlinkability

let system1(error_mac) =
  (new k_e; new k_m; (passport(k_e,k_m,error_mac) | reader(k_e,k_m) ))
  |
  (new k_e; new k_m; (passport(k_e,k_m,error_mac) | reader(k_e,k_m) )).

let system2(error_mac) =
  new k_e; new k_m; (passport(k_e,k_m,error_mac) | reader(k_e,k_m) | passport(k_e,k_m,error_mac) | reader(k_e,k_m)).


query trace_equiv(system1(Error_6300),system2(Error_6300)).
