// Passive Authentication Protocol between a passport (P) and a reader (R)
// We test the anonymity of the passport
// SHOULD BE TRUE

// Pieces of data stored in the different passports
free dg1.
free dg2.
free dgA.

// channels
free c.
free cp1.
free cr1.
free cp2.
free cr2.

// constants
free ok.
free read.

// functions
fun h/1.
fun mac/2.
fun senc/2.
fun sign/2.
fun vk/1.

reduc sdec(senc(x,y),y) -> x.
reduc checksign(sign(x,y),vk(y)) -> x.

/*
Description of the passport role:
- it plays on channel c
- it uses encryption/mac keys ksenc/ksmac
- it stores data dg and the signed version sod
*/

let PApassport(ksenc,ksmac,dg,sod,cc) =
  in(cc, x);
  let (xenc, xmac) = x in
  if xmac = mac(xenc, ksmac) then
  let xread = sdec(xenc,ksenc) in
  if xread = read then
  let menc = senc((dg, sod),ksenc) in
  let mmac = mac(menc,ksmac) in
  out(cc, (menc,mmac)).


/*
Description of the Reader role:
- it plays on channel c
- it uses encryption/mac keys ksenc/ksmac
- it has the signature key KPrDS
*/

let PAreader(KPrDS,ksenc,ksmac,cc) =
  let menc = senc(read,ksenc) in
  let mmac = mac(menc,ksmac) in
  out(cc, (menc, mmac));
  in(cc,x);
  let (xenc, xmac) = x in
  if xmac = mac(xenc, ksmac) then
  let (xdg,xsod) = sdec(xenc,ksenc) in
  let (xhdg, xshdg) = xsod in
  if xhdg = checksign(xshdg, vk(KPrDS)) then
  if xhdg = h(xdg)
  then out(cc, ok).

/*
Passport and Reader in parallel
*/

let ePassport(KPrDS,dg,cp,cr) =
  new ksenc;
  new ksmac;
  let sod = (h(dg), sign(h(dg),KPrDS)) in
  (PAreader(KPrDS,ksenc,ksmac,cr) | PApassport(ksenc,ksmac,dg,sod,cp)).

/*
Just one Reader in isolation
*/

let eReader(KPrDS,dg,cp,cr) =
  new ksenc;
  new ksmac;
  PAreader(KPrDS,ksenc,ksmac,cr).

/*
Whole system P|R
*/
let wholeSystem =
  new KPrDS;
  in(c,zz);
  out(c, vk(KPrDS));
  (ePassport(KPrDS,dg1,cp1,cr1) | ePassport(KPrDS,dg2,cp2,cr2)).

/*
Whole system P|R with
one P that contains
different information
*/
let wholeSystem_swap =
  new KPrDS;
  in(c,zz);
  out(c, vk(KPrDS));
  (ePassport(KPrDS,dgA,cp1,cr1) | ePassport(KPrDS,dg2,cp2,cr2)).

query trace_equiv(wholeSystem,wholeSystem_swap).
