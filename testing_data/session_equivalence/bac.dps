// Unlinkability

fun mac/2.

free c,d.
const ok, error.

// Description of the reader role

let reader(k) =
  in(d,n_t);
  out(d,mac(n_t,k)).

// Description of the passport role

let passport(k) =
  in(c,x); // without this line, the attack is found
  new n_t;
  out(c,n_t);
  in(c,y);
  if y = mac(n_t,k) then out(c,ok)
  else out(c,error).

// Unlinkability

let system1 =
  new k; passport(k) | new k; reader(k).

let system2 =
  new k; (passport(k) | reader(k)).

/* free d.
let test = in(c,x); in(c,y) | in(d,x); in(d,y).
query trace_equiv(test,test). */
query sess_equiv(system1,system2).
/* query trace_equiv(system1,system2). */
