// Unlinkability

fun mac/2.

free c.

free Error_6300.
free get_challenge.
const error,ok.

fun senc/2.

reduc sdec(senc(x,y),y) -> x.

// Description of the reader role

let reader(k_e,k_m) =
  /* out(c,get_challenge); */
  in(c,xn_t);
  new n_r;
  new k_r;
  let xm = senc((n_r,xn_t,k_r),k_e) in
  out(c,(xm,mac(xm,k_m)));
  in(c,y).

// Description of the passport role

let passport =
  /* in(c,x); */
  /* if x = get_challenge */
  /* then */
    /* new n_t; */
    out(c,ok);
    in(c,x).
    /* let (xm_e,xm_m) = y in */
    /* if x = ok then out(c,ok) */
    /* else out(c,error). */

// Unlinkability

let system1 =
  !^2 passport.

let system2 =
  passport | passport.


query sess_equiv(system1,system2).
